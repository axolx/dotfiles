#! /bin/sh

FILES="chef ctags drush gitconfig hgrc irssi my.cnf profile screenrc tmux.conf
 virtualenvs zf.ini"

linkit()
{
    # Process arguments
    if [ $# == 2 ]; then
        src=$1 && dst=$2
    else
        src=$HOME/dotfiles/$1 && dst=$HOME/.$1
    fi

    # Symlink
    # -L True if file exists and is a symbolic link
    if [ -L $dst ]; then
        echo "Skipping $1 beacuse the symlink exists already."
    else
        ln -s $src $dst 
        echo "Linked $1."
    fi

}

unlinkit()
{
    # -L True if file exists and is a symbolic link
    if [ -L $1 ]; then
        unlink $1 
        echo "Unlinked $1."
    else
        echo "Symlink for $1 not found."
    fi
}

dotfiles_link() 
{
    # dotfiles directory
    linkit $DROPBOX/dotfiles $HOME/dotfiles

    # Simple symlnks
    for f in $FILES; do linkit $f; done

    # Special cases
    linkit $HOME/dotfiles/zsh/zshrc.symlink $HOME/.zshrc
    linkit $HOME/dotfiles/vim $HOME/.vim
    linkit $HOME/dotfiles/vim/vimrc $HOME/.vimrc
    linkit $HOME/dotfiles/vim/gvimrc $HOME/.gvimrc
    linkit $HOME/dotfiles/todo/config $HOME/.todo.cfg
}

dotfiles_unlink() 
{
    # Simple symlnks
    for f in $FILES; do unlinkit $HOME/.$f; done

    # Special cases
    unlinkit $HOME/.zshrc
    unlinkit $HOME/.vim
    unlinkit $HOME/.vimrc
    unlinkit $HOME/.gvimrc
    unlinkit $HOME/.todo.cfg

    # dotfiles directory
    unlinkit $HOME/dotfiles

}

usage() 
{
    echo "Available commands: link, unlink"
}

case $1 in
	link)
        dotfiles_link
    ;;
	unlink)
        dotfiles_unlink
    ;;
    *)
        usage
    ;;
esac
